name: CI Pipeline with SAST + DAST + Trivy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  sast-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install bandit safety cyclonedx-bom semgrep

      - name: Run Unit Tests
        run: pytest tests/

      - name: Run Bandit Scan
        run: bandit -r app -f json -o bandit-report.json || true

      - name: Run Safety Check
        run: safety check --full-report || true

      - name: Run Semgrep Scan
        run: semgrep --config auto --json > semgrep-report.json || true

      - name: Generate SBOM
        run: cyclonedx-py requirements -i requirements.txt -o sbom.json

      - name: Upload SAST Reports
        uses: actions/upload-artifact@v4
        with:
          name: sast-reports
          path: |
            bandit-report.json
            semgrep-report.json
            sbom.json

  docker-build:
    needs: sast-checks
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.set-tag.outputs.image_tag }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set Image Tag
        id: set-tag
        run: |
          echo "image_tag=${{ secrets.DOCKERHUB_USERNAME }}/raman-micro:latest" >> $GITHUB_OUTPUT

      - name: Build & Push Docker Image
        run: |
          docker build -t ${{ steps.set-tag.outputs.image_tag }} .
          docker push ${{ steps.set-tag.outputs.image_tag }}

  trivy-scan:
    needs: docker-build
    runs-on: ubuntu-latest
    steps:
    - name: Upload Trivy Report
      run: trivy image --format json -o trivy-report.json ramann123/raman-micro:latest || true

    - uses: actions/upload-artifact@v4
      with:
        name: trivy-report
        path: trivy-report.json

  dast-check:
    needs: trivy-scan
    runs-on: ubuntu-latest
    steps:
      - name: Start Container for DAST
        run: |
          docker run -d -p 5000:5000 --name raman-micro \
          ${{ needs.docker-build.outputs.image_tag }}
          sleep 10  # give app time to start

      - name: Run OWASP ZAP Baseline Scan
        run: |
          docker run --network host \
            ghcr.io/zaproxy/zaproxy:stable zap-baseline.py \
            -t http://localhost:5000 \
            -g gen.conf -r zap-report.html || true

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: zap-report.html

