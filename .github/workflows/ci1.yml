  docker-build-push:
    needs: lint-test-scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/raman-micro:latest

  dast-scan:  # <=== make sure this is at the same level as previous jobs
    needs: docker-build-push
    runs-on: ubuntu-latest
    steps:
      - name: Pull Image from DockerHub
        run: docker pull ${{ secrets.DOCKERHUB_USERNAME }}/raman-micro:latest

      - name: Run Container from Pulled Image
        run: docker run -d -p 5000:5000 --name raman-micro ${{ secrets.DOCKERHUB_USERNAME }}/raman-micro:latest

      - name: Wait for App to be Ready
        run: |
          echo "Waiting for app to start..."
          for i in {1..10}; do
            if curl -s http://localhost:5000 | grep "Hello from raman-micro"; then
              echo "App is ready!"
              break
            fi
            sleep 3
          done

      - name: Run ZAP DAST Scan
        uses: zaproxy/action-baseline@v0.10.0
        with:
          target: 'http://localhost:5000'
          cmd_options: '-t 60'
        continue-on-error: true

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: owasp-zap-report.html

      - name: Clean Up
        if: always()
        run: |
          docker stop raman-micro || true
          docker rm raman-micro || true

